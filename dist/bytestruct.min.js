const e=/(le|be)|(byte)|(?:([fsu])(8|16|32|64))|(\d+)|(\w+):|(\s+)|(.)/g,t={8:1,16:2,32:4,64:8,byte:1},n={f:"Float",s:"Int",u:"Uint"};export function bytes(t,...n){let l,s,o=0,i=[];const f=(e,t)=>{({0:()=>{if(t[1])l="le"===t[1];else if(t[2]){let e={name:"bytes"};null!=s&&(e.label=s,s=void 0),i.push(e)}else if(t[3]){let e=t[3],n=t[4],o={name:e,size:n,littleEndian:l};null!=s&&(o.label=s,s=void 0),i.push(o)}else t[6]?s=t[6]:"*"===t[8]&&(o=1)},1:()=>{if(t[5]){const e=parseInt(t[5]);i.at(-1).repeat=e,o=0}}})[o]()};for(let l=0;l<t.length;l++){const s=t[l],o=s.matchAll(e);for(const e of o)e[7]||f(void 0,e);l<n.length&&f(n[l])}return i}export function sizeOf(e){let n=0;for(const l of e){let e=t[l.size??l.name];l.repeat&&(e*=l.repeat),n+=e}return n}export function readBytesFrom(e,l,s){let o=s,i=[];for(let s=0;s<e.length;s++){const{name:f,size:r,littleEndian:c,repeat:u,label:a}=e[s];let b=n[f],d=t[r];if(("s"===f||"u"===f&&64===r)&&(b=`Big${b}`),a&&(i.fields??={}),"byte"===f){const e=u??1,t=new Uint8Array(l.buffer),n=t.slice(o,o+e);i=i.concat(n),a&&(i.fields[a]=n),o+=e;continue}const p=l[`get${b}${r}`].bind(l);if(u){a&&(i.fields[a]=[]);for(let e=0;e<u;e++){const t=p(o,c);i.push(t),a&&(i.fields[a][e]=t),o+=d}}else{const e=i[s]=p(o,c);a&&(i.fields[a]=e),o+=d}}return i}export function writeBytesInto(e,l,s,o){let i=o,f=0;for(let o=0;o<e.length;o++){const{name:r,size:c,littleEndian:u,repeat:a}=e[o];let b=n[r],d=t[c];if("byte"===r){const e=a??1,t=l.slice(f,f+e),n=new Uint8Array(s.buffer);n.set(i,t),i+=e,f+=e;continue}("s"===r||"u"===r&&64===c)&&(b=`Big${b}`);let p=s[`set${b}${c}`].bind(s);if(a)for(let e=0;e<a;e++)p(i,l[f],u),i+=d,f+=1;else p(i,l[f],u),i+=d,f+=1}return i-o}
