const e=/(le|be)|(byte)|(?:([fsu])(8|16|32|64))|(\d+)|(\w+):|(\s+)|(.)/g,t={8:1,16:2,32:4,64:8,bytes:1},n={f:"Float",s:"Int",u:"Uint"};export function bytes(t,...n){let r,s,o=0,i=[];const f=(e,t)=>{({0:()=>{if(Array.isArray(e))i.push({name:e,label:s}),s=void 0;else if(t[1])r="le"===t[1];else if(t[2]){let e={name:"bytes"};null!=s&&(e.label=s,s=void 0),i.push(e)}else if(t[3]){let e=t[3],n=t[4],o={name:e,size:n,littleEndian:r};null!=s&&(o.label=s,s=void 0),i.push(o)}else t[6]?s=t[6]:"*"===t[8]&&(o=1)},1:()=>{if(!t||t[5]){const n=e??parseInt(t[5]);i.at(-1).repeat=n,o=0}}})[o]()};for(let r=0;r<t.length;r++){const s=t[r],o=s.matchAll(e);for(const e of o)e[7]||f(void 0,e);r<n.length&&f(n[r])}return i}export function sizeOf(e){let n=0;for(const r of e){let e=Array.isArray(r.name)?sizeOf(r.name):t[r.size??r.name];r.repeat&&(e*=r.repeat),n+=e}return n}export function writeStructInto(e,r,s,o){let i=o;for(const{name:o,size:f,littleEndian:l,repeat:c,label:u}of r){const r=s[u];if(Array.isArray(o)){i+=writeStructInto(e,o,r,i);continue}const a=t[f],y=("s"===o||"u"===o)&&64===f?`Big${n[o]}`:n[o],p=e[`set${y}${f}`].bind(e);if(c)for(let e=0;e<c;e++)p(i,r[e],l),i+=a;else p(i,r,l),i+=a}return i-o}export function readStructFrom(e,r,s){const o={};let i=s;for(const{name:s,size:f,littleEndian:l,repeat:c,label:u}of r){const r=t[f??s];if(!u){i+=r;continue}if(Array.isArray(s)){o[u]=readStructFrom(e,s,i),i+=sizeOf(s);continue}if("bytes"===s){const t=c??1,n=new Uint8Array(e.buffer);o[u]=n.slice(i,i+t),i+=t}else{const t=("s"===s||"u"===s)&&64===f?`Big${n[s]}`:n[s],a=e[`get${t}${f}`].bind(e);if(c){const e=[];for(let t=0;t<c;t++)e[t]=a(i,l),i+=r;o[u]=e}else o[u]=a(i,l),i+=r}}return o}export function readBytesFrom(e,r,s){let o=s,i=[];for(let s=0;s<r.length;s++){const{name:f,size:l,littleEndian:c,repeat:u}=r[s];if("bytes"===f){const t=u??1,n=new Uint8Array(e.buffer),r=n.slice(o,o+t);i.push.apply(i,r),o+=t;continue}const a=t[l],y=("s"===f||"u"===f)&&64===l?`Big${n[f]}`:n[f],p=e[`get${y}${l}`].bind(e);if(u)for(let e=0;e<u;e++){const e=p(o,c);i.push(e),o+=a}else{const e=p(o,c);i.push(e),o+=a}}return i}export function writeBytesInto(e,r,s,o){let i=o,f=0;for(let o=0;o<r.length;o++){const{name:l,size:c,littleEndian:u,repeat:a}=r[o];if("bytes"===l){const t=a??1,n=s.slice(f,f+t),r=new Uint8Array(e.buffer);r.set(n,i),i+=t,f+=t;continue}const y=t[c],p=("s"===l||"u"===l)&&64===c?`Big${n[l]}`:n[l],b=e[`set${p}${c}`].bind(e);if(a)for(let e=0;e<a;e++)b(i,s[f],u),i+=y,f+=1;else b(i,s[f],u),i+=y,f+=1}return i-o}
